import kotlin.Boolean;
import kotlin.Int;

CREATE TABLE UserEntity (
    id TEXT PRIMARY KEY NOT NULL,
    username TEXT NOT NULL,
    discriminator TEXT NOT NULL,
    display_name TEXT,
    avatar_id TEXT REFERENCES FileEntity(id),
    badges INTEGER AS Int,
    status_text TEXT,
    status_presence TEXT,
    flags INTEGER AS Int,
    privileged INTEGER AS Boolean,
    relationship TEXT,
    online INTEGER AS Boolean,
    is_current_user INTEGER AS Boolean NOT NULL
);

CREATE TABLE RelationEntity (
    id TEXT PRIMARY KEY NOT NULL,
    status TEXT NOT NULL,
    user_id TEXT NOT NULL REFERENCES UserEntity(id)
);

CREATE TABLE ProfileEntity (
    content TEXT,
    background_id TEXT REFERENCES FileEntity(id),
    user_id TEXT NOT NULL REFERENCES UserEntity(id)
);

CREATE TABLE BotEntity (
    owner TEXT NOT NULL,
    user_id TEXT PRIMARY KEY REFERENCES UserEntity(id)
);

insertUser:
INSERT OR REPLACE INTO UserEntity (
    id,
    username,
    discriminator,
    display_name,
    avatar_id,
    badges,
    status_text,
    status_presence,
    flags,
    privileged,
    relationship,
    online,
    is_current_user
) VALUES ?;

updateUsername:
UPDATE UserEntity SET username = ? WHERE is_current_user = 1;

selectUserById:
SELECT * FROM UserEntity WHERE id = ?;

selectCurrentUser:
SELECT * FROM UserEntity WHERE is_current_user = 1;

inserRelation:
INSERT OR REPLACE INTO RelationEntity (id, status, user_id)
VALUES ?;

selectRelationByUserId:
SELECT * FROM RelationEntity WHERE user_id = ?;

insertProfile:
INSERT OR REPLACE INTO ProfileEntity (content, background_id, user_id)
VALUES ?;

selectProfileByUserId:
SELECT * FROM ProfileEntity WHERE user_id = ?;

insertBot:
INSERT OR REPLACE INTO BotEntity (owner, user_id)
VALUES ?;

selectBotByUserId:
SELECT * FROM BotEntity WHERE user_id = ?;